name: üöÄ CI/CD Pipeline

# –ö–æ–≥–¥–∞ –∑–∞–ø—É—Å–∫–∞—Ç—å workflow
on:
  push:
    branches: [ main, master ]  # –ü—Ä–∏ push –≤ main/master
  pull_request:
    branches: [ main, master ]  # –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PR

# –ó–∞–¥–∞—á–∏ (jobs)
jobs:
  test:
    name: üß™ Run Tests
    runs-on: ubuntu-latest      # –í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ Ubuntu
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11, 3.12]  # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ Python
    
    steps:
    # –®–∞–≥ 1: –°–∫–∞—á–∞—Ç—å –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    - name: üì• Checkout code
      uses: actions/checkout@v4
    
    # –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Python
    - name: üêç Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    # –®–∞–≥ 3: –ö—ç—à–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    - name: üì¶ Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    # –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    - name: üìã Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # –®–∞–≥ 5: –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
    - name: üß™ Run tests with pytest
      run: |
        pytest tests/ -v --tb=short
    
    # –®–∞–≥ 6: –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
    - name: üîç Test module imports
      run: |
        python -c "from src.converter import convert_currency, get_supported_currencies; print('‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —É—Å–ø–µ—à–µ–Ω')"
    
    # –®–∞–≥ 7: –¢–µ—Å—Ç Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    - name: üåê Test Flask app startup
      run: |
        python -c "
        import sys, os
        sys.path.insert(0, '.')
        from app import app
        with app.test_client() as client:
            response = client.get('/test')
            assert response.status_code == 200
            print('‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è')
        "

  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
  quality:
    name: üìä Code Quality
    runs-on: ubuntu-latest
    needs: test  # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
    
    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: üìã Install quality tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        pip install -r requirements.txt
    
    - name: üé® Check code formatting with Black
      run: |
        black --check --diff src/ tests/ app.py
    
    - name: üìè Lint with flake8
      run: |
        flake8 src/ tests/ app.py --max-line-length=88 --extend-ignore=E203,W503
    
    - name: üìÇ Check import sorting
      run: |
        isort --check-only --diff src/ tests/ app.py